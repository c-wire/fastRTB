syntax = "proto3";

package fastrtb;

option go_package = "github.com/c-wire/fastrtb";

message BidRequest {
  string requestId = 1;  // unique request id generated by the seller, should use uuidv7
  string currency = 3; //  ISO 4217 accepted currency by the seller. If the seller supports multiple currencies he needs to agree with the buyer on a single one
  repeated ImpressionRequest imps = 2; // list of the actual ad slots for which the buyer can bid
  User user = 4; // information about the user
  Context context = 5; // information about the context of the impression
}

message ImpressionRequest {
  string impressionId = 1; // unique id for this impression, generated by the seller, should use uuidv7, must be different to requestId
  string slotId = 2; // Ad Unit Code that references the slot on the site.
  repeated Format formats = 3; // list of allowed formats for this impression
}

// FastRTB follows the strategy of having well defined Formats. 
// New formats should be added here

import "fastrtb/formats/search_context_ad_request.proto";
import "fastrtb/formats/banner_ad_request.proto";

message Format {
  oneof request {
    fastrtb.formats.BannerAdRequest bannerAdRequest = 1;
    fastrtb.formats.SearchContextAdRequest searchContextAd = 2;
  };
  optional double floorPrice = 3; // the floor price if any. Currency must be the same as the one in the BidRequest
  repeated string dealIds = 4;
}

message User {
  string country = 1; // country the user is from
  string device = 2; // TODO define devices as enums
  optional string ip = 3;
  optional string userAgent = 4;
}


message Context {
  optional string url = 1;
  optional Embedding embedding = 2;
  repeated Category categories = 3;
}


message Embedding {
  string model = 1;
  bytes vector = 2;
}

message Category {
  string taxonomy = 1;
  string id = 2;
}
