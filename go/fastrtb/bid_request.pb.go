// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: fastrtb/bid_request.proto

package fastrtb

import (
	formats "github.com/c-wire/fastrtb/formats"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string               `protobuf:"bytes,1,opt,name=requestId,proto3" json:"requestId,omitempty"` // unique request id generated by the seller, should use uuidv7
	Currency  string               `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`   //  ISO 4217 accepted currency by the seller. If the seller supports multiple currencies he needs to agree with the buyer on a single one
	Imps      []*ImpressionRequest `protobuf:"bytes,2,rep,name=imps,proto3" json:"imps,omitempty"`           // list of the actual ad slots for which the buyer can bid
	User      *User                `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`           // information about the user
	Context   *Context             `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`     // information about the context of the impression
}

func (x *BidRequest) Reset() {
	*x = BidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidRequest) ProtoMessage() {}

func (x *BidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidRequest.ProtoReflect.Descriptor instead.
func (*BidRequest) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{0}
}

func (x *BidRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BidRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BidRequest) GetImps() []*ImpressionRequest {
	if x != nil {
		return x.Imps
	}
	return nil
}

func (x *BidRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BidRequest) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

type ImpressionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpressionId string    `protobuf:"bytes,1,opt,name=impressionId,proto3" json:"impressionId,omitempty"` // unique id for this impression, generated by the seller, should use uuidv7, must be different to requestId
	SlotId       string    `protobuf:"bytes,2,opt,name=slotId,proto3" json:"slotId,omitempty"`             // Ad Unit Code that references the slot on the site.
	Formats      []*Format `protobuf:"bytes,3,rep,name=formats,proto3" json:"formats,omitempty"`           // list of allowed formats for this impression
}

func (x *ImpressionRequest) Reset() {
	*x = ImpressionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImpressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpressionRequest) ProtoMessage() {}

func (x *ImpressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpressionRequest.ProtoReflect.Descriptor instead.
func (*ImpressionRequest) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{1}
}

func (x *ImpressionRequest) GetImpressionId() string {
	if x != nil {
		return x.ImpressionId
	}
	return ""
}

func (x *ImpressionRequest) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *ImpressionRequest) GetFormats() []*Format {
	if x != nil {
		return x.Formats
	}
	return nil
}

type Format struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*Format_BannerAdRequest
	//	*Format_SearchContextAd
	Request    isFormat_Request `protobuf_oneof:"request"`
	FloorPrice *float64         `protobuf:"fixed64,3,opt,name=floorPrice,proto3,oneof" json:"floorPrice,omitempty"` // the floor price if any. Currency must be the same as the one in the BidRequest
	DealIds    []string         `protobuf:"bytes,4,rep,name=dealIds,proto3" json:"dealIds,omitempty"`
}

func (x *Format) Reset() {
	*x = Format{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Format) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format) ProtoMessage() {}

func (x *Format) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format.ProtoReflect.Descriptor instead.
func (*Format) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{2}
}

func (m *Format) GetRequest() isFormat_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Format) GetBannerAdRequest() *formats.BannerAdRequest {
	if x, ok := x.GetRequest().(*Format_BannerAdRequest); ok {
		return x.BannerAdRequest
	}
	return nil
}

func (x *Format) GetSearchContextAd() *formats.SearchContextAdRequest {
	if x, ok := x.GetRequest().(*Format_SearchContextAd); ok {
		return x.SearchContextAd
	}
	return nil
}

func (x *Format) GetFloorPrice() float64 {
	if x != nil && x.FloorPrice != nil {
		return *x.FloorPrice
	}
	return 0
}

func (x *Format) GetDealIds() []string {
	if x != nil {
		return x.DealIds
	}
	return nil
}

type isFormat_Request interface {
	isFormat_Request()
}

type Format_BannerAdRequest struct {
	BannerAdRequest *formats.BannerAdRequest `protobuf:"bytes,1,opt,name=bannerAdRequest,proto3,oneof"`
}

type Format_SearchContextAd struct {
	SearchContextAd *formats.SearchContextAdRequest `protobuf:"bytes,2,opt,name=searchContextAd,proto3,oneof"`
}

func (*Format_BannerAdRequest) isFormat_Request() {}

func (*Format_SearchContextAd) isFormat_Request() {}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country   string  `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"` // country the user is from
	Device    string  `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`   // TODO define devices as enums
	Ip        *string `protobuf:"bytes,3,opt,name=ip,proto3,oneof" json:"ip,omitempty"`
	UserAgent *string `protobuf:"bytes,4,opt,name=userAgent,proto3,oneof" json:"userAgent,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *User) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *User) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *User) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

type Context struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url        *string     `protobuf:"bytes,1,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Embedding  *Embedding  `protobuf:"bytes,2,opt,name=embedding,proto3,oneof" json:"embedding,omitempty"`
	Categories []*Category `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *Context) Reset() {
	*x = Context{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{4}
}

func (x *Context) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Context) GetEmbedding() *Embedding {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *Context) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type Embedding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model  string `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Vector []byte `protobuf:"bytes,2,opt,name=vector,proto3" json:"vector,omitempty"`
}

func (x *Embedding) Reset() {
	*x = Embedding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Embedding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embedding) ProtoMessage() {}

func (x *Embedding) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embedding.ProtoReflect.Descriptor instead.
func (*Embedding) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{5}
}

func (x *Embedding) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Embedding) GetVector() []byte {
	if x != nil {
		return x.Vector
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taxonomy string `protobuf:"bytes,1,opt,name=taxonomy,proto3" json:"taxonomy,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fastrtb_bid_request_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_fastrtb_bid_request_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_fastrtb_bid_request_proto_rawDescGZIP(), []int{6}
}

func (x *Category) GetTaxonomy() string {
	if x != nil {
		return x.Taxonomy
	}
	return ""
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_fastrtb_bid_request_proto protoreflect.FileDescriptor

var file_fastrtb_bid_request_proto_rawDesc = []byte{
	0x0a, 0x19, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2f, 0x62, 0x69, 0x64, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x66, 0x61, 0x73,
	0x74, 0x72, 0x74, 0x62, 0x1a, 0x2f, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5,
	0x01, 0x0a, 0x0a, 0x42, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6d, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2e,
	0x49, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x69, 0x6d, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x61,
	0x73, 0x74, 0x72, 0x74, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x7a, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72,
	0x74, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4c, 0x0a,
	0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62,
	0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x64,
	0x12, 0x23, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x42,
	0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x69, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x22, 0xa0, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74,
	0x62, 0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x09, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x66, 0x61, 0x73, 0x74, 0x72, 0x74, 0x62, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x39, 0x0a, 0x09, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22,
	0x36, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x42, 0x1b, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x2d, 0x77, 0x69, 0x72, 0x65, 0x2f, 0x66, 0x61, 0x73,
	0x74, 0x72, 0x74, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fastrtb_bid_request_proto_rawDescOnce sync.Once
	file_fastrtb_bid_request_proto_rawDescData = file_fastrtb_bid_request_proto_rawDesc
)

func file_fastrtb_bid_request_proto_rawDescGZIP() []byte {
	file_fastrtb_bid_request_proto_rawDescOnce.Do(func() {
		file_fastrtb_bid_request_proto_rawDescData = protoimpl.X.CompressGZIP(file_fastrtb_bid_request_proto_rawDescData)
	})
	return file_fastrtb_bid_request_proto_rawDescData
}

var file_fastrtb_bid_request_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fastrtb_bid_request_proto_goTypes = []interface{}{
	(*BidRequest)(nil),                     // 0: fastrtb.BidRequest
	(*ImpressionRequest)(nil),              // 1: fastrtb.ImpressionRequest
	(*Format)(nil),                         // 2: fastrtb.Format
	(*User)(nil),                           // 3: fastrtb.User
	(*Context)(nil),                        // 4: fastrtb.Context
	(*Embedding)(nil),                      // 5: fastrtb.Embedding
	(*Category)(nil),                       // 6: fastrtb.Category
	(*formats.BannerAdRequest)(nil),        // 7: fastrtb.formats.BannerAdRequest
	(*formats.SearchContextAdRequest)(nil), // 8: fastrtb.formats.SearchContextAdRequest
}
var file_fastrtb_bid_request_proto_depIdxs = []int32{
	1, // 0: fastrtb.BidRequest.imps:type_name -> fastrtb.ImpressionRequest
	3, // 1: fastrtb.BidRequest.user:type_name -> fastrtb.User
	4, // 2: fastrtb.BidRequest.context:type_name -> fastrtb.Context
	2, // 3: fastrtb.ImpressionRequest.formats:type_name -> fastrtb.Format
	7, // 4: fastrtb.Format.bannerAdRequest:type_name -> fastrtb.formats.BannerAdRequest
	8, // 5: fastrtb.Format.searchContextAd:type_name -> fastrtb.formats.SearchContextAdRequest
	5, // 6: fastrtb.Context.embedding:type_name -> fastrtb.Embedding
	6, // 7: fastrtb.Context.categories:type_name -> fastrtb.Category
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_fastrtb_bid_request_proto_init() }
func file_fastrtb_bid_request_proto_init() {
	if File_fastrtb_bid_request_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fastrtb_bid_request_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fastrtb_bid_request_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImpressionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fastrtb_bid_request_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Format); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fastrtb_bid_request_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fastrtb_bid_request_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Context); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fastrtb_bid_request_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Embedding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fastrtb_bid_request_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fastrtb_bid_request_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Format_BannerAdRequest)(nil),
		(*Format_SearchContextAd)(nil),
	}
	file_fastrtb_bid_request_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_fastrtb_bid_request_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fastrtb_bid_request_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fastrtb_bid_request_proto_goTypes,
		DependencyIndexes: file_fastrtb_bid_request_proto_depIdxs,
		MessageInfos:      file_fastrtb_bid_request_proto_msgTypes,
	}.Build()
	File_fastrtb_bid_request_proto = out.File
	file_fastrtb_bid_request_proto_rawDesc = nil
	file_fastrtb_bid_request_proto_goTypes = nil
	file_fastrtb_bid_request_proto_depIdxs = nil
}
